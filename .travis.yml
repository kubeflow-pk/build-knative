dist: bionic

env:
  global:
    - CODE_TAG=v0.17.2
    - IMAGE_NAME=pkskubeflow/knative

arch:
  - amd64
  - arm64

services:
  - docker

before_install:
#  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#  - sudo add-apt-repository "deb [arch=${TRAVIS_CPU_ARCH}] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#  - sudo apt-get update
#  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce qemu-user-static
#  - wget https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-${TRAVIS_CPU_ARCH}
#  - chmod a+x buildx-v0.4.2.linux-${TRAVIS_CPU_ARCH}
#  - mkdir -p ~/.docker/cli-plugins
#  - mv buildx-v0.4.2.linux-${TRAVIS_CPU_ARCH} ~/.docker/cli-plugins/docker-buildx
#  - docker version
#  - docker buildx version
  - docker login -u ${DOCKER_USER} -p ${DOCKER_PWD}
#  - if [ "${TRAVIS_CPU_ARCH}" = "amd64" ]; then docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; fi
#  - docker buildx create --use
#  - docker buildx inspect --bootstrap
  - git clone -b ${CODE_TAG} --depth 1 https://github.com/knative/serving.git

script:
  - cp Dockerfile serving/
  - cd serving
  - docker build -t ${IMAGE_NAME} -f Dockerfile .
  - docker push ${IMAGE_NAME}/${CODE_TAG}
#  - if [ "${TRAVIS_CPU_ARCH}" = "amd64" ]; then docker buildx build --platform linux/amd64 -t ${IMAGE_NAME} -f Dockerfile . ; else docker buildx build --platform linux/arm64 -t ${IMAGE_NAME} -f Dockerfile . ; fi
